apply plugin: 'com.android.application'
apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: [
'testMycmsMockDebugUnitTest',
'testMycmsProdDebugUnitTest',
'createMycmsMockDebugCoverageReport',
'createMycmsProdDebugCoverageReport',
]) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
            '**/*Module.*', // Modules for Dagger.
            '**/*Dagger*.*', // Dagger auto-generated code.
            '**/*MembersInjector*.*', // Dagger auto-generated code.
            '**/*_Provide*Factory*.*',
            '**/*_Factory.*', //Dagger auto-generated code
            '**/*$*$*.*', // Anonymous classes generated by kotlin
            //add libraries
            'android/**/*.*',
            'com/**/*.*',
            'uk/**/*.*',
            'io/**/*.*',
            //remove what we don't test
            'androidTest/**/*.*',
            'test/**/*.*',
            '**/injector/**/*.*',
            '**/model/**/*.*',
            '**/mock/**/*.*',
            '**/event/**/*.*',
            '**/**_ViewBinding**',
            '**/*EventType.*',
            '**/**Mocked'
    ]

    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/mycmsProd/debug", excludes: fileFilter)
    def mainSrc = files(["src/main/java","src/mycms/java"])

    //Explain to Jacoco where is your source code
    sourceDirectories = files([mainSrc])
    //Explain to Jacoco where are you .class file
    classDirectories = files([debugTree])

    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testMycmsMockDebugUnitTest.exec",
            "jacoco/testMycmsProdDebugUnitTest.exec",
            "outputs/code-coverage/connected/flavors/**/*coverage.ec"
    ])
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.eipteam.healthsafe"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true // for instrumented tests
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    testImplementation 'junit:junit:4.12'
    testImplementation "org.jacoco:org.jacoco.agent:0.8.1"
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    testImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'org.robolectric:robolectric:4.3'
    testImplementation 'org.mockito:mockito-core:2.8.9'
    androidTestImplementation 'org.mockito:mockito-android:2.8.9'
}
